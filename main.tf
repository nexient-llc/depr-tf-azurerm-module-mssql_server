/**
* # Terradocs
* Below are the details that are generated by Terradocs plugin. It contains information about the module, inputs, outputs etc.
*
*
*/

# Copyright 2022 Nexient LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

resource "azurerm_mssql_server" "sql_server" {
  name                                 = var.sql_server_name
  resource_group_name                  = var.resource_group.name
  location                             = var.resource_group.location
  version                              = var.sql_server_version
  administrator_login                  = var.administrator_login_username
  administrator_login_password         = var.administrator_login_password
  minimum_tls_version                  = var.minimum_tls_version
  connection_policy                    = var.connection_policy
  public_network_access_enabled        = var.public_network_access_enabled
  outbound_network_restriction_enabled = var.outbound_network_restriction_enabled

  dynamic "identity" {
    for_each = var.enable_system_managed_identity ? toset(["SystemAssigned"]) : toset([])
    content {
      type = identity.value
    }
  }

  lifecycle {
    ignore_changes = [administrator_login_password]
  }

  tags = merge(local.tags)
}

resource "azurerm_mssql_server_extended_auditing_policy" "server_auditing_policy" {
  count                                   = var.extended_auditing_enabled ? 1 : 0
  server_id                               = azurerm_mssql_server.sql_server.id
  retention_in_days                       = var.retention_in_days
  storage_account_access_key              = var.storage_account_access_key
  storage_account_access_key_is_secondary = false
  storage_endpoint                        = var.storage_endpoint
}

resource "azurerm_mssql_firewall_rule" "firewall_rules" {
  count = length(local.all_firewall_rules)

  name             = "FirewallRule_${count.index}_${replace(local.all_firewall_rules[count.index].start_ip_address, ".", "_")}"
  server_id        = azurerm_mssql_server.sql_server.id
  start_ip_address = local.all_firewall_rules[count.index].start_ip_address
  end_ip_address   = local.all_firewall_rules[count.index].end_ip_address
}
